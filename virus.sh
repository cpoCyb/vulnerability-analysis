#!/bin/bash

clear
rm ./result.txt # Suppression de l'ancien fichier résultat
echo "Vérification de la validité des URLS"

# L'URL à vérifier
FICHIER_URLS="./liste.txt"
echo "Liste des urls non joignable" > ./ErreurCurl.txt
echo " " >> ./ErreurCurl.txt

while IFS= read -r url
do
# Utilise curl pour faire une requête HTTP et obtenir le code de réponse HTTP
http_status=$(curl -A "Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0" -o /dev/null --silent --head --write-out '%{http_code}\n' "$url")

# Vérifie si le code de réponse est 200 (OK), 301 (Moved Permanently), ou 302 (Found)
if [ "$http_status" = "200" ] || [ "$http_status" = "301" ] || [ "$http_status" = "302" ]; then
  echo $url >> ResultCurl.txt
else
  echo "ATTENTION : $url n'est pas joignable !" >> ErreurCurl.txt
fi
done < "$FICHIER_URLS"

# Lire le fichier /ResultCurl.txt ligne par ligne
while IFS= read -r url
do
    # Récupération uniquement du nom de domaine 
    echo $url | grep -oP '(?<=://)[^/]+' | sed 's/^www\.//' >> ./ListTest.txt
done < "$FICHIER_URLS"

echo "Scan des urls pour remonté les vulnérabilités"

# Spécifiez le chemin du fichier texte contenant la liste des domaines
fichier_domaines="./ListTest.txt"
 
# Assurez-vous d'avoir votre clé API VirusTotal
api_key="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
 
echo "Début de traitement des urls avec VirusTotal"

# Parcours chaque ligne du fichier et effectue la requête API pour chaque domaine
while IFS= read -r domaine; do
    curl --request GET --url "https://www.virustotal.com/api/v3/domains/$domaine" -H "x-apikey:$api_key"  > ./analyse/$domaine.txt # Requêtent curl de virustotal
    
    grep '"malicious":' ./analyse/$domaine.txt > ./tempo/$domaine.txt # Recherche de la varible score dans /analyse/$domaine.txt puis stockage dans /tempo/$domaine.txt
    nombre=$(grep -o '[0-9]\+' ./tempo/$domaine.txt | head -n 1) # Recupération du tempo et stockage dans la variable nombre
    # Vérification si le score
    if [ $nombre -gt 0 ]; then # Vérification si le score est supérieur à 0
        if [ $nombre -gt 5 ]; then # Vérification si le score est supérieur à 5
        echo "\033[31mDANGER\033[0m", le score de $domaine et de $nombre >> ./result.txt
        else
        echo "ATTENTION, le score de $domaine et de $nombre" >> ./result.txt
        fi
    else
    echo "\033[32mParfait\033[0m", le score de $domaine et de $nombre >> ./result.txt # Vérification si le score est égal à 0
    fi
    sleep 1m # Attente de 1 minutes (pour rester dans le cadre gratuit de l'utilisation de l'API VirusTotal)
done < "$fichier_domaines"

cat ./result.txt # Affichage du fichier result.txt

rm -R ./analyse/
mkdir ./analyse/
rm -R ./tempo/
mkdir ./tempo/


